env:
  MINIMUM_METADATA_JAVA_VERSION: 17
  REACHABILITY_METADATA_PATH: ${{ github.workspace }}/graalvm-reachability-metadata
jobs:
  build-graalvm-and-populate-matrix:
    if: (github.event_name == 'schedule' && github.repository == 'oracle/graal') ||
      (github.event_name != 'schedule')
    name: Build GraalVM and populate matrix
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout oracle/graal
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Build GraalVM JDK
      uses: ./.github/actions/build-graalvm
      with:
        components: Native Image,Native Image Configure Tool
        java-version: ${{ env.MINIMUM_METADATA_JAVA_VERSION }}
        native-images: native-image,native-image-configure,lib:native-image-agent
    - continue-on-error: true
      name: Tar GraalVM JDK
      run: tar -czvhf graalvm.tgz -C $(dirname ${GRAALVM_HOME}) $(basename ${GRAALVM_HOME})
      shell: bash
    - continue-on-error: true
      name: Persist GraalVM JDK build
      uses: actions/upload-artifact@v4
      with:
        name: graalvm
        path: graalvm.tgz
    - continue-on-error: true
      name: Checkout oracle/graalvm-reachability-metadata
      uses: actions/checkout@v4
      with:
        path: ${{ env.REACHABILITY_METADATA_PATH }}
        repository: oracle/graalvm-reachability-metadata
    - continue-on-error: true
      id: set-matrix
      name: Populate matrix
      run: 'cd ${{ env.REACHABILITY_METADATA_PATH }}

        ./gradlew generateMatrixMatchingCoordinates -Pcoordinates=all

        '
  test-all-metadata:
    env:
      GRAALVM_HOME: ${{ github.workspace }}/graalvm
    name: ${{ matrix.coordinates }}
    needs: build-graalvm-and-populate-matrix
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout oracle/graalvm-reachability-metadata
      uses: actions/checkout@v4
      with:
        repository: oracle/graalvm-reachability-metadata
    - continue-on-error: true
      name: Download GraalVM JDK build
      uses: actions/download-artifact@v4
      with:
        name: graalvm
        path: .
    - continue-on-error: true
      name: Extract GraalVM JDK build
      run: tar -xzvf graalvm.tgz -C $(dirname ${GRAALVM_HOME})
    - continue-on-error: true
      name: Setup JAVA_HOME
      uses: actions/setup-java@v4
      with:
        distribution: oracle
        java-version: ${{ env.MINIMUM_METADATA_JAVA_VERSION }}
    - continue-on-error: true
      name: Pull allowed docker images
      run: './gradlew pullAllowedDockerImages --coordinates=${{ matrix.coordinates
        }}

        '
    - continue-on-error: true
      name: Disable docker
      run: 'sudo apt-get install openbsd-inetd

        sudo bash -c "cat ./.github/workflows/discard-port.conf >> /etc/inetd.conf"

        sudo systemctl start inetd

        sudo mkdir /etc/systemd/system/docker.service.d

        sudo bash -c "cat ./.github/workflows/dockerd.service > /etc/systemd/system/docker.service.d/http-proxy.conf"

        sudo systemctl daemon-reload

        sudo systemctl restart docker

        '
    - continue-on-error: true
      name: Run '${{ matrix.coordinates }}' tests
      run: './gradlew test -Pcoordinates=${{ matrix.coordinates }}

        '
    strategy:
      fail-fast: false
      matrix:
        coordinates: ${{fromJson(needs.build-graalvm-and-populate-matrix.outputs.matrix).coordinates}}
    timeout-minutes: 20
name: Weekly Reachability Metadata Tests
on:
  repository_dispatch:
    types: trigger-ga___reachability-metadata.yml
permissions:
  contents: read
