env:
  COMMON_MAVEN_ARGS: -e -B --settings .github/mvn-settings.xml --fail-at-end
  DB_NAME: hibernate_orm_test
  DB_PASSWORD: hibernate_orm_test
  DB_USER: hibernate_orm_test
  NATIVE_TEST_MAVEN_ARGS: -Dtest-containers -Dstart-containers -Dquarkus.native.native-image-xmx=5g
    -Dnative -Dnative.surefire.skip -Dformat.skip -Dno-descriptor-tests install -DskipDocs
    -Dquarkus.native.container-build=false
  QUARKUS_JAVA_VERSION: 17
  QUARKUS_PATH: ${{ github.workspace }}/quarkus
jobs:
  build-quarkus-and-graalvm:
    if: (github.event_name == 'schedule' && github.repository == 'oracle/graal') ||
      (github.event_name != 'schedule')
    name: Nightly Quarkus and GraalVM build
    outputs:
      matrix: ${{ steps.read.outputs.matrix }}
    permissions:
      contents: read
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout oracle/graal
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Build GraalVM JDK
      uses: ./.github/actions/build-graalvm
      with:
        java-version: ${{ env.QUARKUS_JAVA_VERSION }}
    - continue-on-error: true
      name: Get latest Quarkus release
      run: 'export QUARKUS_VERSION=main #$(curl https://repo1.maven.org/maven2/io/quarkus/quarkus-bom/maven-metadata.xml
        | awk -F"[<>]" ''/latest/ {print $3}'')

        echo Getting Quarkus $QUARKUS_VERSION

        curl --output quarkus.tgz -sL https://api.github.com/repos/quarkusio/quarkus/tarball/$QUARKUS_VERSION

        mkdir ${QUARKUS_PATH}

        tar xf quarkus.tgz -C ${QUARKUS_PATH} --strip-components=1

        '
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Tar GraalVM JDK
      run: tar -czvhf graalvm.tgz -C $(dirname ${GRAALVM_HOME}) $(basename ${GRAALVM_HOME})
      shell: bash
    - continue-on-error: true
      name: Persist GraalVM JDK build
      uses: actions/upload-artifact@v4
      with:
        name: graalvm
        path: graalvm.tgz
    - continue-on-error: true
      name: Build Quarkus
      run: 'cd ${QUARKUS_PATH}

        eval ./mvnw -e -B -Dquickly

        '
    - continue-on-error: true
      id: read
      name: Read json file with native-tests matrix
      run: 'json=$(tr -d ''\n'' < ${QUARKUS_PATH}/.github/native-tests.json )

        echo $json

        echo "matrix=${json}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Tar Maven Repo
      run: tar -czvf maven-repo.tgz -C ~ .m2/repository
      shell: bash
    - continue-on-error: true
      name: Persist Maven Repo
      uses: actions/upload-artifact@v4
      with:
        name: maven-repo
        path: maven-repo.tgz
  native-tests:
    env:
      GRAALVM_HOME: ${{ github.workspace }}/graalvm
    name: Native Tests - ${{matrix.category}}
    needs: build-quarkus-and-graalvm
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'ubuntu')
      name: Download GraalVM JDK build
      uses: actions/download-artifact@v4
      with:
        name: graalvm
        path: .
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'ubuntu')
      name: Extract GraalVM JDK build
      run: tar -xzvf graalvm.tgz -C $(dirname ${GRAALVM_HOME})
      shell: bash
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'ubuntu')
      name: Get latest Quarkus release
      run: 'export QUARKUS_VERSION=main #$(curl https://repo1.maven.org/maven2/io/quarkus/quarkus-bom/maven-metadata.xml
        | awk -F"[<>]" ''/latest/ {print $3}'')

        echo Getting Quarkus $QUARKUS_VERSION

        curl --output quarkus.tgz -sL https://api.github.com/repos/quarkusio/quarkus/tarball/$QUARKUS_VERSION

        mkdir ${QUARKUS_PATH}

        tar xf quarkus.tgz -C ${QUARKUS_PATH} --strip-components=1

        '
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'ubuntu')
      name: Reclaim Disk Space
      run: ${QUARKUS_PATH}/.github/ci-prerequisites.sh
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'ubuntu')
      name: Download Maven Repo
      uses: actions/download-artifact@v4
      with:
        name: maven-repo
        path: .
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'ubuntu')
      name: Extract Maven Repo
      run: tar -xzf maven-repo.tgz -C ~
      shell: bash
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: oracle
        java-version: '17'
    - continue-on-error: true
      env:
        TEST_MODULES: ${{matrix.test-modules}}
      if: startsWith(matrix.os-name, 'ubuntu')
      name: Build with Maven
      run: 'cd ${QUARKUS_PATH}

        ${GRAALVM_HOME}/bin/native-image --version

        ./mvnw $COMMON_MAVEN_ARGS -f integration-tests -pl "$TEST_MODULES" $NATIVE_TEST_MAVEN_ARGS

        '
    - continue-on-error: true
      if: failure()
      name: Prepare failure archive (if maven failed)
      run: find . -type d -name '*-reports' -o -wholename '*/build/reports/tests/functionalTest'
        | tar -czf test-reports.tgz -T -
      shell: bash
    - continue-on-error: true
      if: failure()
      name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-native-${{matrix.category}}
        path: test-reports.tgz
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-quarkus-and-graalvm.outputs.matrix) }}
      max-parallel: 8
    timeout-minutes: ${{matrix.timeout}}
name: Nightly Quarkus Tests
on:
  repository_dispatch:
    types: trigger-ga___quarkus.yml
permissions: {}
